@model PowerCards.ViewModels.DeckViewModel;
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager;
@{
    ViewData["Title"] = "Details";
}

<section class="p-5">
    <div class="mb-3">
        <h1>Created by: @Html.DisplayFor(model => model.Deck.UserName)</h1>
    </div>
    <hr />
    <div class="p-2 d-flex justify-content-between">
        <div>
            <h1>@Html.DisplayFor(model => model.Deck.Title)</h1>
            <p><strong><small>@Html.DisplayFor(model => model.Deck.Subject)</small></strong></p>
            <p><small>@Html.DisplayFor(model => model.Deck.Description)</small></p>
        </div>

        <div class="align-self-center">
            <div class="row">
                @if (Model.Deck.Favorites.Any(favorite => favorite.UserName == UserManager.GetUserName(User) && favorite.DeckID == Model.Deck.DeckID))
                {
                    <form method="post" asp-controller="Favorites" asp-action="Delete">
                        <input type="hidden" name="id1" value="@Model.Deck.DeckID" />
                        <input type="hidden" name="id0" value="@UserManager.GetUserName(User)" />
                        <button type="submit" class="btn btn-warning"><i class="bi bi-star-fill">Favourite</i></button>
                    </form>
                }
                else
                {
                    <form method="post" asp-controller="Favorites" asp-action="Create">
                        <input type="hidden" name="DeckID" value="@Model.Deck.DeckID" />
                        <input type="hidden" name="UserName" value="@UserManager.GetUserName(User)" />
                        <button type="submit" class="btn btn-outline-warning"><i class="bi bi-star">Favourite</i></button>
                    </form>
                }
            </div>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header">
            Cards in this Deck
        </div>
        <div class="card-body">
            @if (Model.Deck.Cards.Any())
            {
                foreach (var card in Model.Deck.Cards)
                {
                    <div class="row mb-4 w-100 d-flex justify-content-between row align-content-center">
                        <!-- Question Card -->
                        <div class="col-md-5">
                            <div class="card bg-dark text-white">
                                <div class="card-body">
                                    <h5 class="card-title">Question</h5>
                                    <p class="card-text">@card.Question</p>
                                </div>
                            </div>
                        </div>

                        <!-- Answer Card -->
                        <div class="col-md-5">
                            <div class="card">
                                <div class="card-body hidden-answer">
                                    <h5 class="card-title">Answer</h5>
                                    <p class="card-text">@card.Answer</p>
                                </div>
                                <button class="toggle-answer-btn">Show Answer</button>
                            </div>
                        </div>
                        <!--Only user who created the deck then card can edit and delete-->
                        @if (SignInManager.IsSignedIn(User) && UserManager.GetUserId(User) == Model.Deck.UserName)
                        {

                            <!-- Edit & Delete Actions -->
                            <div class="col-md-1 row align-self-center p-0" style="min-width: 90px;">
                                <a asp-controller="Cards" asp-action="Edit" asp-route-id="@card.CardID" class="btn btn-primary my-2 min-"><i class="bi bi-pen">Edit</i></a>
                                <form class="p-0 my-2" method="post" asp-controller="Cards" asp-action="Delete">
                                    <input type="hidden" name="id" value="@card.CardID" />
                                    <button type="submit" class="btn btn-danger w-100"><i class="bi bi-trash">Delete</i></button>
                                </form>
                            </div>
                        }
                    </div>

                }
            }
            else
            {
                <!-- Display a message if no cards are available for this deck -->
                <p>No cards available for this deck.</p>
            }
        </div>
    </div>
    <!-- Cards Display end-->
    <!-- Begin Card Creation Form -->
    @if (SignInManager.IsSignedIn(User) && UserManager.GetUserId(User) == Model.Deck.UserName)
    {
        <div class="card mt-4">
            <div class="card-header">
                Add a New Card
            </div>
            <div class="card-body">
                <div asp-validation-summary="All" class="text-danger"></div>
                <form asp-controller="Cards" asp-action="CreateFromDeckDetails" method="post">
                    <input type="hidden" asp-for="Card.DeckID" />
                    <div class="form-group">
                        <label asp-for="Card.Question">Question</label>
                        <input asp-for="Card.Question" class="form-control" />
                        <span asp-validation-for="Card.Question" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Card.Answer">Answer</label>
                        <input asp-for="Card.Answer" class="form-control" />
                        <span asp-validation-for="Card.Answer" class="text-danger"></span>
                    </div>
                    <div class="form-group mt-3">
                        <button type="submit" class="btn btn-primary">Add Card</button>
                    </div>
                </form>
            </div>
        </div>
    }
    <!-- End Card Creation Form -->
    <div class="d-flex justify-content-between pt-3">
        <a asp-action="Index" class="btn btn-success">Back to List</a>
        <div>
            <a asp-controller="Decks" asp-action="Edit" asp-route-id="@Model.Deck.DeckID" class="btn btn-primary mx-3">Edit Deck</a>
            <a asp-controller="Decks" asp-action="Delete" asp-route-id="@Model.Deck.DeckID" class="btn btn-danger">Delete Deck</a>
        </div>
    </div>
</section>
